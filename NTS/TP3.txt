/*
** Exercice:
**   - The goal of this practical is to let you use everything
**       you learned in the previous ones to design a usefull circuit
**   - Your task is to design a circuit to manage a digicode lock
**   - The lock is represented by the green LED: when it is on the
**     lock is open, when it is off the lock is closed.
**   - Your program must handle the following features:
**      - When a numeric key is pressed, you must push everyting
**          on the displays to the left and write the key value on
**          left-most display.
**      - When the 'D' key is pressed, you must reset the display to '0000'
**        - When the 'C' key is pressed, you must delete the last
**          entered number and push everything else to the left
**        - When the '#' key is pressed, you must verify the code and
**        unlock the lock if the entered code is correct
**      - Bonus: When the lock is opened and the 'A' key is pressed,
**          you may change the password to be whatever is on the 
**          display, lock the lock and reset the display to '0000'
**        
**
*/

#include <Keypad.h>
const byte ROWS = 4; 
const byte COLS = 4; 

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6}; 
byte colPins[COLS] = {5, 4, 3, 2}; 

Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

// TODO: Write the pin configuration of the registers and the keypad configuration

// The currently displayed numbers
char currentCode[] = {'0', '0', '0', '0'};

// The password of the lock
char code[] = {'4', '2', '4', '2'};

void setup()
{
  pinMode(10, OUTPUT);
  pinMode(11, OUTPUT);
  pinMode(12, OUTPUT);
  pinMode(13, OUTPUT);
}

void push_key(int nb) {
  if (nb < 0 || nb > 15) return;
  for (int i = 0; i < 4; i++) {
    // Write the next bit
    digitalWrite(10, (nb >> (3 - i)) & 1); 

    // Tick the write clock to confirm the input
    digitalWrite(12, HIGH);
    digitalWrite(12, LOW);
    
    // Reset the input PIN
    digitalWrite(10, LOW);
    
    // Tick on the clock to shift all bits in the register
    digitalWrite(11, HIGH);
    digitalWrite(11, LOW);
  }
}

void loop()
{
  // Get the pressed Key
    char key = customKeypad.getKey();
      key = (key == '*') ? 'E' : key;
      key = (key == '#') ? 'F' : key;
    
  if (key == 'D'){
      push_key(0);
      push_key(0);
      push_key(0);
      push_key(0);
  }
    
      // Convert it to integer value
      int nb = 0;
    if (key >= '0' || key <= '9') {
        nb = key - '0';
    } else if (key >= 'A' || key <= 'F') {
          nb = key - 'A' + 10;
    } else {
      nb = 0;
    }
  
      // Push it to the registers
    if (key != 0)
      push_key(nb);
      delay(50); // For performances
}
